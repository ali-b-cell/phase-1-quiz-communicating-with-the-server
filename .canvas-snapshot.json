{
  "quiz": {
    "id": 42565,
    "title": "Communicating with the Server Quiz",
    "html_url": "https://learning.flatironschool.com/courses/6638/quizzes/42565",
    "mobile_url": "https://learning.flatironschool.com/courses/6638/quizzes/42565?force_user=1&persist_headless=1",
    "description": "<div id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-1-quiz-communicating-with-the-server\"></div>\n<header class=\"fis-header\">\n  <a class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-1-quiz-communicating-with-the-server/issues/new\" target=\"_blank\"><img id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"></a>\n</header>\n\n<p>It's time to check your knowledge! Use this quiz to create a custom study guide.\nNote any answers that were marked incorrect, so you can study the relevant\nmaterial and try this quiz again.</p>\n\n<p>If you don't know the answer to a question, please do not guess. Instead, select\n\"I don't know\". It's OK not to know everything and to admit when we're unsure.</p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 6,
    "points_possible": 6.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_42565"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": "",
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/6638/quizzes/42565/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/6638/quizzes/42565/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/6638/quizzes/42565/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/6638/quizzes/42565/submission_versions",
    "assignment_id": 223857,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 19770,
    "show_correct_answers_last_attempt": true,
    "version_number": 3,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": "g5987aca5c1f29cc34b74555290f68a04",
    "in_paced_course": false,
    "question_types": [

    ]
  },
  "questions": [
    {
      "id": 289930,
      "quiz_id": 42565,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 1,
      "question_name": "HTTP: Request",
      "question_type": "multiple_answers_question",
      "question_text": "Which of the following are included when the browser <strong>sends</strong> a HTTP\n<strong>request</strong>? Select all that apply.",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:How the Web WorksVideo: Intro to the Internet",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/pages/how-the-web-works?module_item_id=523520\">How the Web Works</a></li><li><a href=\"/courses/6638/pages/video-intro-to-the-internet?module_item_id=523519\">Video: Intro to the Internet</a></li></ul><p></p>",
      "answers": [
        {
          "weight": 100,
          "migration_id": "RESPONSE_805",
          "id": 805,
          "text": "URL"
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_3133",
          "id": 3133,
          "text": "HTTP Verb"
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_9407",
          "id": 9407,
          "text": "Headers"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_8768",
          "id": 8768,
          "text": "Status Code",
          "comments": "Not quite. Status codes are included in the response from the server to indicate whether or not the request succeeded.",
          "comments_html": "Not quite. Status codes are included in the <strong>response</strong> from the server to\nindicate whether or not the request succeeded."
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_8748",
          "id": 8748,
          "text": "I don't know.",
          "html": "I don't know.",
          "comments": "Be sure to study the source/s for this question. You'll get it next time."
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289931,
      "quiz_id": 42565,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 2,
      "question_name": "HTTP: Response",
      "question_type": "multiple_answers_question",
      "question_text": "Which of the following are included when the browser <strong>receives</strong> a HTTP\n<strong>response</strong>? Select all that apply.",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:How the Web WorksVideo: Intro to the Internet",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/pages/how-the-web-works?module_item_id=523520\">How the Web Works</a></li><li><a href=\"/courses/6638/pages/video-intro-to-the-internet?module_item_id=523519\">Video: Intro to the Internet</a></li></ul><p></p>",
      "answers": [
        {
          "weight": 0,
          "migration_id": "RESPONSE_7274",
          "id": 7274,
          "text": "URL",
          "comments": "The URL is part of the request from the client, not the response from the server.",
          "comments_html": "The URL is part of the <strong>request</strong> from the client, not the response from the\nserver."
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_9270",
          "id": 9270,
          "text": "HTTP Verb",
          "comments": "The HTTP Verb is part of the request from the client, not the response from the server.",
          "comments_html": "The HTTP Verb is part of the <strong>request</strong> from the client, not the response\nfrom the server."
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_5888",
          "id": 5888,
          "text": "Headers"
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_7991",
          "id": 7991,
          "text": "Status Code"
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_7478",
          "id": 7478,
          "text": "Body"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_7628",
          "id": 7628,
          "text": "I don't know.",
          "html": "I don't know.",
          "comments": "Be sure to study the source/s for this question. You'll get it next time."
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289932,
      "quiz_id": 42565,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 3,
      "question_name": "JSON",
      "question_type": "multiple_choice_question",
      "question_text": "Which one of the following is valid JSON?",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Using JSON Server and Postman to Mock Client/Server Communication",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/assignments/223932\">Using JSON Server and Postman to Mock Client/Server Communication</a></li></ul><p></p>",
      "answers": [
        {
          "weight": 100,
          "migration_id": "RESPONSE_9398",
          "id": 9398,
          "text": "{ \"articles\": [ { \"id\": 1, \"title\": \"Example Article\", \"content\": \"This is an example.\" }, { \"id\": 2, \"title\": \"Second Article\", \"content\": \"This is also an example.\" } ] }",
          "html": "<div class=\"highlight\"><pre class=\"highlight json\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"articles\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"id\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"title\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Example Article\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"content\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"This is an example.\"</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"id\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"title\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Second Article\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"content\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"This is also an example.\"</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div>",
          "comments": "Correct!"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_5901",
          "id": 5901,
          "text": "{ articles: [ { id: 1, title: \"Example Article\", content: \"This is an example.\", }, { id: 2, title: \"Second Article\", content: \"This is also an example.\", }, ]; }",
          "html": "<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"p\">{</span>\n  <span class=\"nl\">articles</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n      <span class=\"na\">title</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Example Article</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n      <span class=\"na\">content</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">This is an example.</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n      <span class=\"na\">title</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Second Article</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n      <span class=\"na\">content</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">This is also an example.</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">];</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
          "comments": "Not quite. JSON objects must have double-quotes around the keys."
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_9632",
          "id": 9632,
          "text": "I don't know",
          "html": "I don't know",
          "comments": "Be sure to study the source/s for this question. You'll get it next time."
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289933,
      "quiz_id": 42565,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 4,
      "question_name": "Asynchronous JavaScript",
      "question_type": "true_false_question",
      "question_text": "The <code>setTimeout</code> function is an example of <strong>asynchronous</strong> JavaScript code.",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Asynchronous JavaScript",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/pages/asynchronous-javascript\">Asynchronous JavaScript</a></li></ul><p></p>",
      "answers": [
        {
          "weight": 100,
          "migration_id": "RESPONSE_5819",
          "id": 5819,
          "text": "True"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_1586",
          "id": 1586,
          "text": "False"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289934,
      "quiz_id": 42565,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 5,
      "question_name": "Fetch",
      "question_type": "multiple_choice_question",
      "question_text": "Yuli is making an application that interacts with a Pokemon API which uses\nJSON as its response format. Assuming that Yuli has created a variable <code>URL</code>\nthat contains the correct API endpoint to fetch a single Pokemon instance, Which\nof the following code snippets would send a request to the API then log a\nPokemon object to the console?",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Using fetch",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/pages/using-fetch\">Using fetch</a></li></ul><p></p>",
      "answers": [
        {
          "weight": 100,
          "migration_id": "RESPONSE_8993",
          "id": 8993,
          "text": "fetch(URL) .then((resp) = resp.json()) .then((pokemon) = console.log(pokemon));",
          "html": "<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"nx\">URL</span><span class=\"p\">)</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">resp</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">resp</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">())</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">pokemon</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">pokemon</span><span class=\"p\">));</span>\n</code></pre></div>",
          "comments": "Correct!"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_2449",
          "id": 2449,
          "text": "fetch(URL) .then((resp) = resp.text()) .then((pokemon) = console.log(pokemon));",
          "html": "<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"nx\">URL</span><span class=\"p\">)</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">resp</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">resp</span><span class=\"p\">.</span><span class=\"nx\">text</span><span class=\"p\">())</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">pokemon</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">pokemon</span><span class=\"p\">));</span>\n</code></pre></div>",
          "comments": "Not quite. In the first .then method, using .text() on the response will pass a string of text to the next .then rather than a Pokemon object.",
          "comments_html": "Not quite. In the first <code>.then</code> method, using <code>.text()</code> on the response will\npass a string of text to the next <code>.then</code> rather than a Pokemon object."
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_8268",
          "id": 8268,
          "text": "fetch(URL).then((pokemon) = console.log(pokemon));",
          "html": "<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"nx\">URL</span><span class=\"p\">).</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">pokemon</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">pokemon</span><span class=\"p\">));</span>\n</code></pre></div>",
          "comments": "Not quite. In the .then method, we'll have access to the raw response object, which has a JSON-formatted string in the body. How can we convert that JSON string to a JavaScript object?",
          "comments_html": "Not quite. In the <code>.then</code> method, we'll have access to the raw response\nobject, which has a JSON-formatted string in the body. How can we convert that\nJSON string to a JavaScript object?"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_4269",
          "id": 4269,
          "text": "I don't know",
          "html": "I don't know",
          "comments": "Be sure to study the source/s for this question. You'll get it next time."
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289935,
      "quiz_id": 42565,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 6,
      "question_name": "Sending Data with Fetch",
      "question_type": "short_answer_question",
      "question_text": "<p>We can send additional data in a request by using the <code>body</code> option when calling\n<code>fetch</code>. What code would you need to write next to the <code>body</code> option in the\n<code>configurationObject</code> to send the <code>formData</code> object to the server in the example\nbelow?</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">formData</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">dogName</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Byron</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n  <span class=\"na\">dogBreed</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Poodle</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">configurationObject</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">method</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">POST</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n  <span class=\"na\">headers</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">Content-Type</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">application/json</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"na\">Accept</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">application/json</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n  <span class=\"p\">},</span>\n  <span class=\"na\">body</span><span class=\"p\">:</span> <span class=\"nx\">________</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n\n<span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">http://localhost:3000/dogs</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">configurationObject</span><span class=\"p\">);</span>\n</code></pre></div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Sending Data with Fetch",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/assignments/223926\">Sending Data with Fetch</a></li></ul><p></p>",
      "answers": [
        {
          "text": "JSON.stringify(formData)",
          "weight": 100,
          "comments": "",
          "id": 3170
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}